{"ast":null,"code":"export default {\n  name: 'GenerateLetter',\n  data() {\n    return {\n      cedula: '',\n      egresado: null,\n      pdfUrl: ''\n    };\n  },\n  methods: {\n    async searchGraduate() {\n      const response = await fetch(`/api/consultar?cedula=${this.cedula}`);\n      if (response.ok) {\n        const egresados = await response.json();\n        if (egresados.length > 0) {\n          this.egresado = egresados[0];\n        } else {\n          alert('No se encontró un egresado con esa cédula');\n        }\n      } else {\n        alert('Error al buscar egresado');\n      }\n    },\n    async generateLetter(tipoCarta) {\n      const response = await fetch('/api/generar-carta', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cedula: this.egresado.cedula,\n          tipoCarta\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        this.pdfUrl = data.pdfUrl; // URL para descargar el PDF\n      } else {\n        alert('Error al generar la carta');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","cedula","egresado","pdfUrl","methods","searchGraduate","response","fetch","ok","egresados","json","length","alert","generateLetter","tipoCarta","method","headers","body","JSON","stringify"],"sources":["src/components/GenerateLetter.vue"],"sourcesContent":["<template>\n    <div class=\"generate-letter\">\n      <h1>Generar Carta</h1>\n      <div>\n        <label for=\"cedula\">Cédula</label>\n        <input type=\"text\" v-model=\"cedula\" @keyup.enter=\"searchGraduate\">\n        <button @click=\"searchGraduate\">Buscar</button>\n      </div>\n      <div v-if=\"egresado\">\n        <h2>Información del Egresado</h2>\n        <p><strong>Nombre:</strong> {{ egresado.nombre }}</p>\n        <p><strong>Cédula:</strong> {{ egresado.cedula }}</p>\n        <p><strong>Código de Carrera:</strong> {{ egresado.cod_carrera }}</p>\n        <p><strong>Código de Período:</strong> {{ egresado.cod_periodo }}</p>\n        <!-- Añade más campos según sea necesario -->\n        <div class=\"buttons\">\n          <button @click=\"generateLetter('carta_tipo_1')\">Carta Tipo 1</button>\n          <button @click=\"generateLetter('carta_tipo_2')\">Carta Tipo 2</button>\n          <button @click=\"generateLetter('carta_tipo_3')\">Carta Tipo 3</button>\n        </div>\n      </div>\n      <div v-if=\"pdfUrl\">\n        <a :href=\"pdfUrl\" target=\"_blank\" download=\"carta.pdf\">Descargar PDF</a>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'GenerateLetter',\n    data() {\n      return {\n        cedula: '',\n        egresado: null,\n        pdfUrl: ''\n      }\n    },\n    methods: {\n      async searchGraduate() {\n        const response = await fetch(`/api/consultar?cedula=${this.cedula}`);\n        if (response.ok) {\n          const egresados = await response.json();\n          if (egresados.length > 0) {\n            this.egresado = egresados[0];\n          } else {\n            alert('No se encontró un egresado con esa cédula');\n          }\n        } else {\n          alert('Error al buscar egresado');\n        }\n      },\n      async generateLetter(tipoCarta) {\n        const response = await fetch('/api/generar-carta', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            cedula: this.egresado.cedula,\n            tipoCarta\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.pdfUrl = data.pdfUrl; // URL para descargar el PDF\n        } else {\n          alert('Error al generar la carta');\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .generate-letter {\n    text-align: center;\n    margin-top: 50px;\n  }\n  button {\n    padding: 10px 20px;\n    font-size: 16px;\n    cursor: pointer;\n    margin: 5px;\n  }\n  input {\n    margin-top: 10px;\n    padding: 10px;\n    font-size: 16px;\n  }\n  .buttons {\n    display: flex;\n    justify-content: center;\n  }\n  .buttons button {\n    margin: 0 10px;\n  }\n  </style>\n  "],"mappings":"AA4BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,eAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,+BAAAN,MAAA;MACA,IAAAK,QAAA,CAAAE,EAAA;QACA,MAAAC,SAAA,SAAAH,QAAA,CAAAI,IAAA;QACA,IAAAD,SAAA,CAAAE,MAAA;UACA,KAAAT,QAAA,GAAAO,SAAA;QACA;UACAG,KAAA;QACA;MACA;QACAA,KAAA;MACA;IACA;IACA,MAAAC,eAAAC,SAAA;MACA,MAAAR,QAAA,SAAAC,KAAA;QACAQ,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;UACAlB,MAAA,OAAAC,QAAA,CAAAD,MAAA;UACAa;QACA;MACA;MACA,IAAAR,QAAA,CAAAE,EAAA;QACA,MAAAR,IAAA,SAAAM,QAAA,CAAAI,IAAA;QACA,KAAAP,MAAA,GAAAH,IAAA,CAAAG,MAAA;MACA;QACAS,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}