{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: 'ListadoPromocion',\n  data() {\n    return {\n      codigoCarrera: '',\n      codigoPeriodo: '',\n      tipoLista: 'tipo1',\n      // Por defecto, seleccionamos tipo 1\n      anos: [],\n      anoSeleccionado: '',\n      periodos: [],\n      carreras: [],\n      egresados: []\n    };\n  },\n  created() {\n    this.cargarCarreras();\n    this.cargarAnos();\n  },\n  methods: {\n    async cargarCarreras() {\n      try {\n        const response = await fetch('/api/carreras');\n        if (response.ok) {\n          this.carreras = await response.json();\n        } else {\n          console.error('Error al cargar las carreras');\n        }\n      } catch (error) {\n        console.error('Error al cargar las carreras:', error);\n      }\n    },\n    async cargarAnos() {\n      try {\n        const response = await fetch('/api/periodos');\n        if (response.ok) {\n          const periodos = await response.json();\n          this.anos = [...new Set(periodos.map(periodo => periodo.ano))];\n        } else {\n          console.error('Error al cargar los años');\n        }\n      } catch (error) {\n        console.error('Error al cargar los años:', error);\n      }\n    },\n    async cargarPeriodos() {\n      this.periodos = [{\n        cod_periodo: 'A',\n        periodo: 'A'\n      }, {\n        cod_periodo: 'B',\n        periodo: 'B'\n      }, {\n        cod_periodo: 'U',\n        periodo: 'U'\n      }, {\n        cod_periodo: 'E',\n        periodo: 'E'\n      }, {\n        cod_periodo: 'I',\n        periodo: 'I'\n      }];\n    },\n    async buscarEgresados() {\n      try {\n        const response = await fetch(`/api/listado-promocion?codigo_carrera=${this.codigoCarrera}&codigo_periodo=${this.codigoPeriodo}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.error) {\n            alert(data.error);\n            this.egresados = [];\n          } else {\n            this.egresados = data;\n          }\n        } else {\n          alert('No se encontraron egresados o hubo un error en la búsqueda');\n          this.egresados = [];\n        }\n      } catch (error) {\n        console.error('Error al buscar egresados:', error);\n        alert('Hubo un error en la búsqueda');\n      }\n    },\n    generarPDF() {\n      const url = `/api/generar-listado-promocion?codigo_carrera=${this.codigoCarrera}&codigo_periodo=${this.codigoPeriodo}&tipo_lista=${this.tipoLista}`;\n      window.open(url, '_blank');\n    }\n  }\n};","map":{"version":3,"names":["name","data","codigoCarrera","codigoPeriodo","tipoLista","anos","anoSeleccionado","periodos","carreras","egresados","created","cargarCarreras","cargarAnos","methods","response","fetch","ok","json","console","error","Set","map","periodo","ano","cargarPeriodos","cod_periodo","buscarEgresados","alert","generarPDF","url","window","open"],"sources":["src/components/ListadoPromocion.vue"],"sourcesContent":["<template>\n  <div class=\"listado-promocion\">\n    <h2>Listado Promoción</h2>\n    <div>\n      <label for=\"codigo_carrera\">Código de Carrera:</label>\n      <select v-model=\"codigoCarrera\" required>\n        <option v-for=\"carrera in carreras\" :key=\"carrera.cod_carrera\" :value=\"carrera.cod_carrera\">\n          {{ carrera.nombre }}\n        </option>\n      </select>\n    </div>\n    <div>\n      <label for=\"codigo_periodo\">Año de Período:</label>\n      <select v-model=\"anoSeleccionado\" @change=\"cargarPeriodos\" required>\n        <option v-for=\"ano in anos\" :key=\"ano\" :value=\"ano\">\n          {{ ano }}\n        </option>\n      </select>\n    </div>\n    <div>\n      <label for=\"codigo_periodo\">Período:</label>\n      <select v-model=\"codigoPeriodo\" required>\n        <option v-for=\"periodo in periodos\" :key=\"periodo.cod_periodo\" :value=\"periodo.cod_periodo\">\n          {{ periodo.periodo }}\n        </option>\n        <!-- Utilizando solo los periodos permitidos -->\n        <option value=\"A\">A</option>\n        <option value=\"B\">B</option>\n        <option value=\"U\">U</option>\n        <option value=\"E\">E</option>\n        <option value=\"I\">I</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"tipo_lista\">Tipo de Lista:</label>\n      <select v-model=\"tipoLista\" required>\n        <option value=\"tipo1\">Cuadro de Promoción por el Promedio Ponderado</option>\n        <option value=\"tipo2\">Cuadro de Promoción por el Promedio Aritmético</option>\n        <option value=\"tipo3\">Cuadro de Promoción en Orden Alfabético</option>\n      </select>\n    </div>\n    <button @click=\"buscarEgresados\">Buscar</button>\n    \n    <div v-if=\"egresados.length > 0\">\n      <h3>Resultados:</h3>\n      <ul>\n        <li v-for=\"egresado in egresados\" :key=\"egresado.cedula\">\n          {{ egresado.nombre }} - {{ egresado.cedula }} - {{ egresado.rendimiento }}\n        </li>\n      </ul>\n      <button @click=\"generarPDF\">Generar PDF</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ListadoPromocion',\n  data() {\n    return {\n      codigoCarrera: '',\n      codigoPeriodo: '',\n      tipoLista: 'tipo1',  // Por defecto, seleccionamos tipo 1\n      anos: [],\n      anoSeleccionado: '',\n      periodos: [],\n      carreras: [],\n      egresados: []\n    };\n  },\n  created() {\n    this.cargarCarreras();\n    this.cargarAnos();\n  },\n  methods: {\n    async cargarCarreras() {\n      try {\n        const response = await fetch('/api/carreras');\n        if (response.ok) {\n          this.carreras = await response.json();\n        } else {\n          console.error('Error al cargar las carreras');\n        }\n      } catch (error) {\n        console.error('Error al cargar las carreras:', error);\n      }\n    },\n    async cargarAnos() {\n      try {\n        const response = await fetch('/api/periodos');\n        if (response.ok) {\n          const periodos = await response.json();\n          this.anos = [...new Set(periodos.map(periodo => periodo.ano))];\n        } else {\n          console.error('Error al cargar los años');\n        }\n      } catch (error) {\n        console.error('Error al cargar los años:', error);\n      }\n    },\n    async cargarPeriodos() {\n      this.periodos = [\n        { cod_periodo: 'A', periodo: 'A' },\n        { cod_periodo: 'B', periodo: 'B' },\n        { cod_periodo: 'U', periodo: 'U' },\n        { cod_periodo: 'E', periodo: 'E' },\n        { cod_periodo: 'I', periodo: 'I' }\n      ];\n    },\n    async buscarEgresados() {\n      try {\n        const response = await fetch(`/api/listado-promocion?codigo_carrera=${this.codigoCarrera}&codigo_periodo=${this.codigoPeriodo}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.error) {\n            alert(data.error);\n            this.egresados = [];\n          } else {\n            this.egresados = data;\n          }\n        } else {\n          alert('No se encontraron egresados o hubo un error en la búsqueda');\n          this.egresados = [];\n        }\n      } catch (error) {\n        console.error('Error al buscar egresados:', error);\n        alert('Hubo un error en la búsqueda');\n      }\n    },\n    generarPDF() {\n      const url = `/api/generar-listado-promocion?codigo_carrera=${this.codigoCarrera}&codigo_periodo=${this.codigoPeriodo}&tipo_lista=${this.tipoLista}`;\n      window.open(url, '_blank');\n    }\n  }\n};\n</script>\n\n<style scoped>\n  /* Estilos para el formulario */\n.listado-promocion {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin: 20px;\n}\n\n.listado-promocion h2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n.listado-promocion div {\n  margin-bottom: 10px;\n}\n\n.listado-promocion label {\n  display: block;\n  font-weight: bold;\n}\n\n.listado-promocion input, .listado-promocion select {\n  width: 100%;\n  padding: 8px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.listado-promocion button {\n  padding: 10px 15px;\n  background-color: #336699;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.listado-promocion button:hover {\n  background-color: #5a9bd3;\n}\n\n.listado-promocion ul {\n  list-style-type: none;\n  padding: 0;\n  margin-top: 20px;\n}\n\n.listado-promocion ul li {\n  padding: 10px;\n  background-color: #f9f9f9;\n  border-bottom: 1px solid #ccc;\n}\n\n.listado-promocion ul li:last-child {\n  border-bottom: none;\n}\n</style>\n"],"mappings":";;;;;;;;AAwDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,aAAA;MACAC,SAAA;MAAA;MACAC,IAAA;MACAC,eAAA;MACAC,QAAA;MACAC,QAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAF,eAAA;MACA;QACA,MAAAG,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,KAAAR,QAAA,SAAAM,QAAA,CAAAG,IAAA;QACA;UACAC,OAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,kCAAAA,KAAA;MACA;IACA;IACA,MAAAP,WAAA;MACA;QACA,MAAAE,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,MAAAT,QAAA,SAAAO,QAAA,CAAAG,IAAA;UACA,KAAAZ,IAAA,WAAAe,GAAA,CAAAb,QAAA,CAAAc,GAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAC,GAAA;QACA;UACAL,OAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,8BAAAA,KAAA;MACA;IACA;IACA,MAAAK,eAAA;MACA,KAAAjB,QAAA,IACA;QAAAkB,WAAA;QAAAH,OAAA;MAAA,GACA;QAAAG,WAAA;QAAAH,OAAA;MAAA,GACA;QAAAG,WAAA;QAAAH,OAAA;MAAA,GACA;QAAAG,WAAA;QAAAH,OAAA;MAAA,GACA;QAAAG,WAAA;QAAAH,OAAA;MAAA,EACA;IACA;IACA,MAAAI,gBAAA;MACA;QACA,MAAAZ,QAAA,SAAAC,KAAA,+CAAAb,aAAA,wBAAAC,aAAA;QACA,IAAAW,QAAA,CAAAE,EAAA;UACA,MAAAf,IAAA,SAAAa,QAAA,CAAAG,IAAA;UACA,IAAAhB,IAAA,CAAAkB,KAAA;YACAQ,KAAA,CAAA1B,IAAA,CAAAkB,KAAA;YACA,KAAAV,SAAA;UACA;YACA,KAAAA,SAAA,GAAAR,IAAA;UACA;QACA;UACA0B,KAAA;UACA,KAAAlB,SAAA;QACA;MACA,SAAAU,KAAA;QACAD,OAAA,CAAAC,KAAA,+BAAAA,KAAA;QACAQ,KAAA;MACA;IACA;IACAC,WAAA;MACA,MAAAC,GAAA,yDAAA3B,aAAA,wBAAAC,aAAA,oBAAAC,SAAA;MACA0B,MAAA,CAAAC,IAAA,CAAAF,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}